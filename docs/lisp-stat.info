This is lisp-stat.info, produced by makeinfo version 6.8 from
lisp-stat.texi.

     Copyright © 2019-2022 Steve Nunez

     Permission is granted to make and distribute verbatim copies of
     this manual provided the copyright notice and this permission
     notice are preserved on all copies.

     Permission is granted to copy and distribute modified versions of
     this manual under the conditions for verbatim copying, provided
     also that the section entitled “Copying” is included exactly as in
     the original.

     Permission is granted to copy and distribute translations of this
     manual into another language, under the above conditions for
     modified versions, except that this permission notice may be
     translated as well.
INFO-DIR-SECTION Common Lisp
START-INFO-DIR-ENTRY
* LISP-STAT Reference Manual: (lisp-stat). The LISP-STAT Reference Manual.
END-INFO-DIR-ENTRY


File: lisp-stat.info,  Node: Top,  Next: Copying,  Prev: (dir),  Up: (dir)

The LISP-STAT Reference Manual
******************************

This is the LISP-STAT Reference Manual, version 1.2.0, generated
automatically by Declt version 4.0b2.

* Menu:

* Copying:: The Microsoft Public License
* Systems:: The systems documentation
* Modules:: The modules documentation
* Files:: The files documentation
* Packages:: The packages documentation
* Definitions:: The symbols documentation
* Indexes:: Concepts, functions, variables and data types

     Copyright © 2019-2022 Steve Nunez

     Permission is granted to make and distribute verbatim copies of
     this manual provided the copyright notice and this permission
     notice are preserved on all copies.

     Permission is granted to copy and distribute modified versions of
     this manual under the conditions for verbatim copying, provided
     also that the section entitled “Copying” is included exactly as in
     the original.

     Permission is granted to copy and distribute translations of this
     manual into another language, under the above conditions for
     modified versions, except that this permission notice may be
     translated as well.


File: lisp-stat.info,  Node: Copying,  Next: Systems,  Prev: Top,  Up: Top

Copying
*******

     This program is distributed under the terms of the Microsoft Public
     License.


File: lisp-stat.info,  Node: Systems,  Next: Modules,  Prev: Copying,  Up: Top

1 Systems
*********

The main system appears first, followed by any subsystem dependency.

* Menu:

* The lisp-stat system::


File: lisp-stat.info,  Node: The lisp-stat system,  Prev: Systems,  Up: Systems

1.1 lisp-stat
=============

A statistical computing environment for Common Lisp
*Long Name*
     Statistical Computing in Common Lisp
*Author*
     Steve Nunez <<steve@symbolics.tech>>
*Home Page*
     <https://lisp-stat.dev/>
*Source Control*
     (GIT https://github.com/Lisp-Stat/lisp-stat.git)
*Bug Tracker*
     <https://github.com/Lisp-Stat/lisp-stat/issues>
*License*
     MS-PL
*Long Description*
     The Lisp-Stat system is an umbrella for a few projects and provides
     a unified interface for working with statistics.  The general rule
     is that Lisp-Stat may depend on other libraries, for example
     data-frame, but not the other way around.  Lisp-Stat provides it’s
     own user package, LS-USER, which imports CL as well as the symbols
     we need from the other libraries.  You should always do your work
     in the LS-USER package, and not in CL-USER.
*Version*
     1.2.0
*Dependencies*
        • alexandria (system).
        • alexandria+ (system).
        • array-operations (system).
        • data-frame (system).
        • distributions (system).
        • dexador (system).
        • dfio (system).
        • num-utils (system).
        • select (system).
        • statistics (system).
        • org.tfeb.conduit-packages (system).
*Source*
     *note lisp-stat.asd: ❨4❩.
*Child Components*
        • *note pkgdcls.lisp: ❨5❩. (file).
        • *note license: ❨6❩. (file).
        • *note base: ❨2❩. (module).
        • *note docs: ❨3❩. (module).
        • *note ls-init.lisp: ❨9❩. (file).


File: lisp-stat.info,  Node: Modules,  Next: Files,  Prev: Systems,  Up: Top

2 Modules
*********

Modules are listed depth-first from the system components tree.

* Menu:

* The lisp-stat/base module::
* The lisp-stat/docs module::


File: lisp-stat.info,  Node: The lisp-stat/base module,  Next: The lisp-stat/docs module,  Prev: Modules,  Up: Modules

2.1 lisp-stat/base
==================

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note lisp-stat: ❨1❩. (system).
*Child Component*
     *note variables.lisp: ❨7❩. (file).


File: lisp-stat.info,  Node: The lisp-stat/docs module,  Prev: The lisp-stat/base module,  Up: Modules

2.2 lisp-stat/docs
==================

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note lisp-stat: ❨1❩. (system).
*Child Component*
     *note doc-strings.lisp: ❨8❩. (file).


File: lisp-stat.info,  Node: Files,  Next: Packages,  Prev: Modules,  Up: Top

3 Files
*******

Files are sorted by type and then listed depth-first from the systems
components trees.

* Menu:

* Lisp files::
* Static files::


File: lisp-stat.info,  Node: Lisp files,  Next: Static files,  Prev: Files,  Up: Files

3.1 Lisp
========

* Menu:

* The lisp-stat/lisp-stat․asd file::
* The lisp-stat/pkgdcls․lisp file::
* The lisp-stat/base/variables․lisp file::
* The lisp-stat/docs/doc-strings․lisp file::
* The lisp-stat/ls-init․lisp file::


File: lisp-stat.info,  Node: The lisp-stat/lisp-stat․asd file,  Next: The lisp-stat/pkgdcls․lisp file,  Prev: Lisp files,  Up: Lisp files

3.1.1 lisp-stat/lisp-stat.asd
-----------------------------

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note lisp-stat: ❨1❩. (system).
*ASDF Systems*
     *note lisp-stat: ❨1❩.


File: lisp-stat.info,  Node: The lisp-stat/pkgdcls․lisp file,  Next: The lisp-stat/base/variables․lisp file,  Prev: The lisp-stat/lisp-stat․asd file,  Up: Lisp files

3.1.2 lisp-stat/pkgdcls.lisp
----------------------------

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note lisp-stat: ❨1❩. (system).
*Packages*
        • *note lisp-stat: ❨10❩.
        • *note ls-user: ❨11❩.


File: lisp-stat.info,  Node: The lisp-stat/base/variables․lisp file,  Next: The lisp-stat/docs/doc-strings․lisp file,  Prev: The lisp-stat/pkgdcls․lisp file,  Up: Lisp files

3.1.3 lisp-stat/base/variables.lisp
-----------------------------------

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note base: ❨2❩. (module).
*Public Interface*
        • *note def: ❨13❩. (macro).
        • *note savevar: ❨15❩. (function).
        • *note undef-var: ❨12❩. (function).
        • *note variables: ❨14❩. (function).
*Internals*
        • *note *variables*: ❨17❩. (special variable).
        • *note save-obj: ❨16❩. (generic function).


File: lisp-stat.info,  Node: The lisp-stat/docs/doc-strings․lisp file,  Next: The lisp-stat/ls-init․lisp file,  Prev: The lisp-stat/base/variables․lisp file,  Up: Lisp files

3.1.4 lisp-stat/docs/doc-strings.lisp
-------------------------------------

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note docs: ❨3❩. (module).


File: lisp-stat.info,  Node: The lisp-stat/ls-init․lisp file,  Prev: The lisp-stat/docs/doc-strings․lisp file,  Up: Lisp files

3.1.5 lisp-stat/ls-init.lisp
----------------------------

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note lisp-stat: ❨1❩. (system).
*Internals*
     *note setup-ls-translations: ❨18❩. (function).


File: lisp-stat.info,  Node: Static files,  Prev: Lisp files,  Up: Files

3.2 Static
==========

* Menu:

* The lisp-stat/license file::


File: lisp-stat.info,  Node: The lisp-stat/license file,  Prev: Static files,  Up: Static files

3.2.1 lisp-stat/license
-----------------------

*Source*
     *note lisp-stat.asd: ❨4❩.
*Parent Component*
     *note lisp-stat: ❨1❩. (system).


File: lisp-stat.info,  Node: Packages,  Next: Definitions,  Prev: Files,  Up: Top

4 Packages
**********

Packages are listed by definition order.

* Menu:

* The lisp-stat package::
* The ls-user package::


File: lisp-stat.info,  Node: The lisp-stat package,  Next: The ls-user package,  Prev: Packages,  Up: Packages

4.1 lisp-stat
=============

*Source*
     *note pkgdcls.lisp: ❨5❩.
*Public Interface*
        • *note def: ❨13❩. (macro).
        • *note savevar: ❨15❩. (function).
        • *note undef-var: ❨12❩. (function).
        • *note variables: ❨14❩. (function).
*Internals*
        • *note *variables*: ❨17❩. (special variable).
        • *note save-obj: ❨16❩. (generic function).
        • *note setup-ls-translations: ❨18❩. (function).


File: lisp-stat.info,  Node: The ls-user package,  Prev: The lisp-stat package,  Up: Packages

4.2 ls-user
===========

*Source*
     *note pkgdcls.lisp: ❨5❩.
*Internals*
        • *note iris: ❨21❩. (special variable).
        • *note mtcars: ❨22❩. (special variable).
        • *note plant-growth: ❨19❩. (special variable).
        • *note tooth-growth: ❨23❩. (special variable).
        • *note usarrests: ❨20❩. (special variable).


File: lisp-stat.info,  Node: Definitions,  Next: Indexes,  Prev: Packages,  Up: Top

5 Definitions
*************

Definitions are sorted by export status, category, package, and then by
lexicographic order.

* Menu:

* Public Interface::
* Internals::


File: lisp-stat.info,  Node: Public Interface,  Next: Internals,  Prev: Definitions,  Up: Definitions

5.1 Public Interface
====================

* Menu:

* Public macros::
* Public ordinary functions::


File: lisp-stat.info,  Node: Public macros,  Next: Public ordinary functions,  Prev: Public Interface,  Up: Public Interface

5.1.1 Macros
------------

 -- Macro: def (name value &optional documentation)
     Define a data variable
     VALUE is not evaluated and must be a symbol.  Assigns the value of
     FORM to VALUE and adds VALUE to the list *VARIABLES* of def’ed
     variables.  Returns VALUE. If VALUE is already bound and the global
     variable *ASK-ON-REDEFINE* is not nil then you are asked if you
     want to redefine the variable.
     *Package*
          *note lisp-stat: ❨10❩.
     *Source*
          *note variables.lisp: ❨7❩.


File: lisp-stat.info,  Node: Public ordinary functions,  Prev: Public macros,  Up: Public Interface

5.1.2 Ordinary functions
------------------------

 -- Function: savevar (vars file &optional suffix)
     VARS is a symbol or a list of symbols.  FILE is a string (or a
     symbol whose print name is used) not ending in SUFFIX (defaults to
     ".lisp").  The VARS and their current values are written to the
     file FILE.lisp in a form suitable for use with the load command.
     NOTE: Ensure VARS doesn’t contain CLOS objects that don’t have a
     SAVE-OBJ method.  Example (savevar ’urban "urban")
     *Package*
          *note lisp-stat: ❨10❩.
     *Source*
          *note variables.lisp: ❨7❩.
 -- Function: undef-var (v)
     Remove V from the system
     If V is the symbol of a defined variable the variable it is unbound
     and removed from the list of defined variables.  If V is a list of
     variable names each is unbound and removed.  Returns V. Example:
     (undef ’urban)
     *Package*
          *note lisp-stat: ❨10❩.
     *Source*
          *note variables.lisp: ❨7❩.
 -- Function: variables ()
     Returns a list of the names of all def’ed variables.
     *Package*
          *note lisp-stat: ❨10❩.
     *Source*
          *note variables.lisp: ❨7❩.


File: lisp-stat.info,  Node: Internals,  Prev: Public Interface,  Up: Definitions

5.2 Internals
=============

* Menu:

* Private special variables::
* Private ordinary functions::
* Private generic functions::


File: lisp-stat.info,  Node: Private special variables,  Next: Private ordinary functions,  Prev: Internals,  Up: Internals

5.2.1 Special variables
-----------------------

 -- Special Variable: *variables*
     *Package*
          *note lisp-stat: ❨10❩.
     *Source*
          *note variables.lisp: ❨7❩.
 -- Special Variable: iris
     Edgar Anderson’s Iris Data

     Description
     This famous (Fisher’s or Anderson’s) iris data set gives the
     measurements in centimeters of the variables sepal length and width
     and petal length and width, respectively, for 70 flowers from each
     of 3 species of iris.  The species are Iris setosa, versicolor, and
     virginica.

     Source
     Fisher, R. A. (1937) The use of multiple measurements in taxonomic
     problems.  Annals of Eugenics, 7, Part II, 179–188.  The data were
     collected by Anderson, Edgar (1937).  The irises of the Gaspe
     Peninsula, Bulletin of the American Iris Society, 79, 2–7

     References
     Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) The New S
     Language.  Wadsworth & Brooks/Cole.  (has iris3 as iris.)

     Examples (from R)

     dni3 <- dimnames(iris3)
     ii <- data.frame(matrix(aperm(iris3, c(1,3,2)), ncol = 4,
     dimnames = list(NULL, sub(" L.",".Length", sub(" W.",".Width",
     dni3[[2]])))), Species = gl(3, 50, labels = sub("S", "s", sub("V",
     "v", dni3[[3]])))) all.equal(ii, iris) # TRUE
     *Package*
          *note ls-user: ❨11❩.
 -- Special Variable: mtcars
     Motor Trend Car Road Tests

     Description
     The data was extracted from the 1974 Motor Trend US magazine, and
     comprises fuel consumption and 10 aspects of automobile design and
     performance for 32 automobiles (1973–74 models).

     Note
     Henderson and Velleman (1981) comment in a footnote to Table 1:
     ‘Hocking [original transcriber]’s noncrucial coding of the Mazda’s
     rotary engine as a straight six-cylinder engine and the Porsche’s
     flat engine as a V engine, as well as the inclusion of the diesel
     Mercedes 240D, have been retained to enable direct comparisons to
     be made with previous analyses.’

     Source
     Henderson and Velleman (1981), Building multiple regression models
     interactively.  Biometrics, 37, 391–411.
     *Package*
          *note ls-user: ❨11❩.
 -- Special Variable: plant-growth
     Results from an Experiment on Plant Growth

     Description
     Results from an experiment to compare yields (as measured by dried
     weight of plants) obtained under a control and two different
     treatment conditions.

     Format
     A data frame of 30 cases on 2 variables.
     [, 1] weight numeric
     [, 2] group factor

     The levels of group are ‘ctrl’, ‘trt1’, and ‘trt2’.

     Source
     Dobson, A. J. (1983) An Introduction to Statistical Modelling.
     London: Chapman and Hall.

     Examples (from R)

     ## One factor ANOVA example from Dobson’s book, cf.  Table 7.4:
     require(stats); require(graphics)
     boxplot(weight ~ group, data = PlantGrowth, main = "PlantGrowth
     data", ylab = "Dried weight of plants", col = "lightgray",
     notch = TRUE, varwidth = TRUE)
     anova(lm(weight ~ group, data = PlantGrowth))
     *Package*
          *note ls-user: ❨11❩.
 -- Special Variable: tooth-growth
     The Effect of Vitamin C on Tooth Growth in Guinea Pigs

     Description
     The response is the length of odontoblasts (cells responsible for
     tooth growth) in 60 guinea pigs.  Each animal received one of three
     dose levels of vitamin C (0.5, 1, and 2 mg/day) by one of two
     delivery methods, orange juice or ascorbic acid (a form of vitamin
     C and coded as VC).

     Format
     A data frame with 60 observations on 3 variables.
     [,1] len numeric Tooth length
     [,2] supp factor Supplement type (VC or OJ).
     [,3] dose numeric Dose in milligrams/day

     Source
     C. I. Bliss (1952).  The Statistics of Bioassay.  Academic Press.

     References
     - McNeil, D. R. (1977).  Interactive Data Analysis.  New York:
     Wiley.
     - Crampton, E. W. (1947).  The growth of the odontoblast of the
     incisor teeth as a criterion of vitamin C intake of the guinea pig.
     The Journal of Nutrition, 33(5), 491–504.  doi:
     10.1093/jn/33.5.491.

     Examples

     require(graphics)
     coplot(len ~ dose | supp, data = ToothGrowth, panel = panel.smooth,
     xlab = "ToothGrowth data: length vs dose, given type of
     supplement")
     *Package*
          *note ls-user: ❨11❩.
 -- Special Variable: usarrests
     Violent Crime Rates by US State

     Description
     This data set contains statistics, in arrests per 100,000
     residents,
     for assault, murder, and rape in each of the 50 US states in 1973.
     Also given is the percent of the population living in urban areas.

     Note
     USArrests contains the data as in McNeil’s monograph.  For the
     UrbanPop percentages, a review of the table (No.  21) in the
     Statistical
     Abstracts 1975 reveals a transcription error for Maryland (and that
     McNeil used the same “round to even” rule that R’s round() uses),
     as
     found by Daniel S Coven (Arizona).

     See the example below on how to correct the error and improve
     accuracy
     for the ‘<n>.5’ percentages.

     Source
     World Almanac and Book of facts 1975.  (Crime rates).
     Statistical Abstracts of the United States 1975, p.20, (Urban
     rates), possibly available as
     https://books.google.ch/books?id=zl9qAAAAMAAJ&pg=PA20.

     References
     McNeil, D. R. (1977) Interactive Data Analysis.  New York: Wiley.

     Examples

     (summary usarrests)

     ;; Difference between ’USArrests’ and its correction
     (which usarrests:x3 :predicate (lambda (x) (string= "Maryland" x)))
     ; #(19) (select usarrests 19 ’urbanpop) ; 67, the value transcribed
     incorrectly (setf (elt usarrests:urbanpop 19) 76.6) ; change to the
     correct value

     ;; correct rounding errors of +/- 0.5 to restore the original <n>.5
     percentages (map nil (lambda (x)
     (setf (elt usarrests:urbanpop x)
     (+ 0.5 (elt usarrests:urbanpop x))))
     (which usarrests:x3 :predicate (lambda (x)
     (or (string= "Colorado" x)
     (string= "Florida" x)
     (string= "Mississippi" x)
     (string= "Wyoming" x)))))

     (map nil (lambda (x)
     (setf (elt usarrests:urbanpop x)
     (- 0.5 (elt usarrests:urbanpop x))))
     (which usarrests:x3 :predicate (lambda (x)
     (or (string= "Nebraska" x)
     (string= "Pennsylvania" x)))))
     *Package*
          *note ls-user: ❨11❩.


File: lisp-stat.info,  Node: Private ordinary functions,  Next: Private generic functions,  Prev: Private special variables,  Up: Internals

5.2.2 Ordinary functions
------------------------

 -- Function: setup-ls-translations ()
     *Package*
          *note lisp-stat: ❨10❩.
     *Source*
          *note ls-init.lisp: ❨9❩.


File: lisp-stat.info,  Node: Private generic functions,  Prev: Private ordinary functions,  Up: Internals

5.2.3 Generic functions
-----------------------

 -- Generic Function: save-obj (data)
     Save data object
     *Package*
          *note lisp-stat: ❨10❩.
     *Source*
          *note variables.lisp: ❨7❩.


File: lisp-stat.info,  Node: Indexes,  Prev: Definitions,  Up: Top

Appendix A Indexes
******************

* Menu:

* Concept index::
* Function index::
* Variable index::
* Data type index::


File: lisp-stat.info,  Node: Concept index,  Next: Function index,  Prev: Indexes,  Up: Indexes

A.1 Concepts
============


File: lisp-stat.info,  Node: Function index,  Next: Variable index,  Prev: Concept index,  Up: Indexes

A.2 Functions
=============

 [index ]
* Menu:

* def:                                   Public macros.        (line  6)
* Function, savevar:                     Public ordinary functions.
                                                               (line  7)
* Function, setup-ls-translations:       Private ordinary functions.
                                                               (line  7)
* Function, undef-var:                   Public ordinary functions.
                                                               (line 18)
* Function, variables:                   Public ordinary functions.
                                                               (line 28)
* Generic Function, save-obj:            Private generic functions.
                                                               (line  7)
* Macro, def:                            Public macros.        (line  7)
* save-obj:                              Private generic functions.
                                                               (line  6)
* savevar:                               Public ordinary functions.
                                                               (line  6)
* setup-ls-translations:                 Private ordinary functions.
                                                               (line  6)
* undef-var:                             Public ordinary functions.
                                                               (line 17)
* variables:                             Public ordinary functions.
                                                               (line 27)


File: lisp-stat.info,  Node: Variable index,  Next: Data type index,  Prev: Function index,  Up: Indexes

A.3 Variables
=============

 [index ]
* Menu:

* *variables*:                           Private special variables.
                                                              (line   6)
* iris:                                  Private special variables.
                                                              (line  11)
* mtcars:                                Private special variables.
                                                              (line  40)
* plant-growth:                          Private special variables.
                                                              (line  61)
* Special Variable, *variables*:         Private special variables.
                                                              (line   7)
* Special Variable, iris:                Private special variables.
                                                              (line  12)
* Special Variable, mtcars:              Private special variables.
                                                              (line  41)
* Special Variable, plant-growth:        Private special variables.
                                                              (line  62)
* Special Variable, tooth-growth:        Private special variables.
                                                              (line  91)
* Special Variable, usarrests:           Private special variables.
                                                              (line 126)
* tooth-growth:                          Private special variables.
                                                              (line  90)
* usarrests:                             Private special variables.
                                                              (line 125)


File: lisp-stat.info,  Node: Data type index,  Prev: Variable index,  Up: Indexes

A.4 Data types
==============

 [index ]
* Menu:

* base:                                  The lisp-stat/base module.
                                                                (line 6)
* doc-strings.lisp:                      The lisp-stat/docs/doc-strings․lisp file.
                                                                (line 6)
* docs:                                  The lisp-stat/docs module.
                                                                (line 6)
* File, doc-strings.lisp:                The lisp-stat/docs/doc-strings․lisp file.
                                                                (line 6)
* File, license:                         The lisp-stat/license file.
                                                                (line 6)
* File, lisp-stat.asd:                   The lisp-stat/lisp-stat․asd file.
                                                                (line 6)
* File, ls-init.lisp:                    The lisp-stat/ls-init․lisp file.
                                                                (line 6)
* File, pkgdcls.lisp:                    The lisp-stat/pkgdcls․lisp file.
                                                                (line 6)
* File, variables.lisp:                  The lisp-stat/base/variables․lisp file.
                                                                (line 6)
* license:                               The lisp-stat/license file.
                                                                (line 6)
* lisp-stat:                             The lisp-stat system.  (line 6)
* lisp-stat <1>:                         The lisp-stat package. (line 6)
* lisp-stat.asd:                         The lisp-stat/lisp-stat․asd file.
                                                                (line 6)
* ls-init.lisp:                          The lisp-stat/ls-init․lisp file.
                                                                (line 6)
* ls-user:                               The ls-user package.   (line 6)
* Module, base:                          The lisp-stat/base module.
                                                                (line 6)
* Module, docs:                          The lisp-stat/docs module.
                                                                (line 6)
* Package, lisp-stat:                    The lisp-stat package. (line 6)
* Package, ls-user:                      The ls-user package.   (line 6)
* pkgdcls.lisp:                          The lisp-stat/pkgdcls․lisp file.
                                                                (line 6)
* System, lisp-stat:                     The lisp-stat system.  (line 6)
* variables.lisp:                        The lisp-stat/base/variables․lisp file.
                                                                (line 6)



Tag Table:
Node: Top907
Node: Copying2137
Node: Systems2320
Node: The lisp-stat system2528
Ref: ❨1❩2640
Node: Modules4196
Node: The lisp-stat/base module4432
Ref: ❨2❩4593
Node: The lisp-stat/docs module4760
Ref: ❨3❩4905
Node: Files5074
Node: Lisp files5303
Node: The lisp-stat/lisp-stat․asd file5629
Ref: ❨4❩5835
Node: The lisp-stat/pkgdcls․lisp file5986
Ref: ❨5❩6220
Node: The lisp-stat/base/variables․lisp file6412
Ref: ❨7❩6668
Node: The lisp-stat/docs/doc-strings․lisp file7111
Ref: ❨8❩7371
Node: The lisp-stat/ls-init․lisp file7471
Ref: ❨9❩7664
Node: Static files7837
Node: The lisp-stat/license file7977
Ref: ❨6❩8125
Node: Packages8230
Node: The lisp-stat package8440
Ref: ❨10❩8583
Node: The ls-user package9033
Ref: ❨11❩9155
Node: Definitions9504
Node: Public Interface9759
Node: Public macros9965
Ref: ❨13❩10172
Node: Public ordinary functions10628
Ref: ❨15❩10833
Ref: ❨12❩11379
Ref: ❨14❩11780
Node: Internals11948
Node: Private special variables12163
Ref: ❨17❩12373
Ref: ❨21❩12507
Ref: ❨22❩13691
Ref: ❨19❩14571
Ref: ❨23❩15533
Ref: ❨20❩16795
Node: Private ordinary functions18856
Ref: ❨18❩19089
Node: Private generic functions19195
Ref: ❨16❩19391
Node: Indexes19521
Node: Concept index19716
Node: Function index19842
Node: Variable index21557
Node: Data type index23408

End Tag Table


Local Variables:
coding: utf-8
End:
